// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using goonline.Data;

#nullable disable

namespace goonline.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241203130334_migracja2")]
    partial class migracja2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("goonline.Models.Todo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("expiryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isDone")
                        .HasColumnType("bit");

                    b.Property<int>("percentComplete")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.ToTable("Todos");

                    b.HasData(
                        new
                        {
                            id = 1,
                            description = "Resolve the issue causing downtime on the payment gateway.",
                            expiryDate = new DateTime(2024, 12, 4, 14, 3, 34, 638, DateTimeKind.Local).AddTicks(1691),
                            isDone = false,
                            percentComplete = 0,
                            title = "Fix critical bug in production"
                        },
                        new
                        {
                            id = 2,
                            description = "Finish REST API Task",
                            expiryDate = new DateTime(2024, 12, 6, 14, 3, 34, 639, DateTimeKind.Local).AddTicks(9682),
                            isDone = false,
                            percentComplete = 50,
                            title = "Complete Project"
                        },
                        new
                        {
                            id = 3,
                            description = "Add detailed API documentation for the new endpoints using Swagger.",
                            expiryDate = new DateTime(2024, 12, 4, 2, 3, 34, 639, DateTimeKind.Local).AddTicks(9702),
                            isDone = true,
                            percentComplete = 100,
                            title = "Update documentation for REST API"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
